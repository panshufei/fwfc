<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:annotation-config/>

	<context:component-scan base-package="com.bosy.fwfc">
		<!--不扫描控制器-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	 <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
	   <!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<!--配置和mybatis的整合-->
	<!-- 扫描存放SQL语句的xml -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--指定mybatis全局配置文件的位置-->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
		<!--指定mapper文件的位置-->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<!--  扫描dao，并将其生命周期纳入Spring的管理 -->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有的dao接口的实现，加入到spring容器中-->
		<property name="basePackage" value="com.bosy.fwfc.dao"/>
	</bean>

	<!-- 创建一个可以批量插入的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg name="executorType" value="BATCH"/>
	</bean>
	
	<!-- 配置事务管理器 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <!--控制住数据源-->
	   <property name="dataSource" ref="dataSource"/>
  </bean>
  <!-- 开启注解事务 -->
  <tx:annotation-driven/>
   <!-- xml方式 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />  
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>  
            <tx:method name="list*" propagation="REQUIRED" rollback-for="Exception"/>  
        </tx:attributes>  
    </tx:advice>  
        
    <aop:config>
		<!--切入点表达式-->
        <aop:pointcut id="serviceMethod" expression="execution(* com.bosy.fwfc.service..*(..))"/>
		<!--配置事务增强-->
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>  
    </aop:config>   

</beans>